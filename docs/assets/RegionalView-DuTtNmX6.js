import{r as g,w as W,b as X,d as Y,c as s,o as r,e as l,f as J,g as Q,h as K,v as ee,F as b,i as h,t as x,m as C,j as te,k as oe}from"./index-CYqvC0li.js";const ne={class:"map-container"},le={class:"controls"},ie={key:0,class:"suggestions"},ae=["onClick"],se={key:0,class:"data-table"},re={key:1,class:"data-summary"},ue={__name:"RegionalMapHighlight",props:{mapboxToken:{type:String,required:!0},initialCenter:{type:Array,default:()=>[-72.5778,44.4688]},initialZoom:{type:Number,default:6},layerToHighlight:{type:String,default:"Nonresidential",requred:!1}},setup(M){const w=M,f=g([]);g(!1);const P=g([]);g("");const d=g(""),T=g([]),y=g([]),z=g(["Affordable_Housing_District","Type_of_Zoning_District"]),F=g([]),N=g(0);let _=null;const H=()=>{const n=d.value.toLowerCase();T.value=P.value.filter(o=>o.toLowerCase().includes(n))},Z=n=>{d.value=n,T.value=[]},A=()=>{if(!t){console.error("Map instance is not initialized.");return}if(d.value){console.log(`Applying filter for jurisdiction: ${d.value}`),t.setFilter("fgb-layer",["==",["get","Jurisdiction"],d.value]),y.value=f.value.filter(e=>e.properties.Jurisdiction===d.value),F.value=y.value.map(e=>{const a={};return z.value.forEach(u=>{a[u]=e.properties[u]||"N/A"}),a}),N.value=new Set(y.value.map(e=>e.properties.Jurisdiction)).size;const n=new C.LngLatBounds;let o=0;if(f.value.forEach(e=>{if(e.properties.Jurisdiction===d.value&&e.geometry){o++;const a=e.geometry.coordinates;e.geometry.type==="Polygon"?a[0].forEach(u=>n.extend(u)):e.geometry.type==="Point"&&n.extend(a)}}),o===0?console.warn(`No features found for jurisdiction: ${d.value}`):console.log(`Found ${o} features for jurisdiction: ${d.value}`),!n.isEmpty())console.log("Fitting map to bounds:",n),t.fitBounds(n,{padding:50}),_=n;else if(console.warn("Bounds are empty. Unable to fit map."),f.value.length>0){const e=f.value[1];if(e.geometry){const a=e.geometry.coordinates;e.geometry.type==="Polygon"?a[0].forEach(u=>n.extend(u)):e.geometry.type==="Point"&&n.extend(a),console.log("Using first feature's geometry to fit bounds:",n),t.fitBounds(n,{padding:50})}}else if(_)console.log("Using last valid bounds as fallback:",_),t.fitBounds(_,{padding:50});else{console.warn("No fallback bounds available. Using default bounds.");const e=new C.LngLatBounds([-73.5,42.5],[-71.5,45]);t.fitBounds(e,{padding:50})}}else console.log("No jurisdiction selected. Resetting filter."),t.setFilter("fgb-layer",null),y.value=[],F.value=[],N.value=0};W(w,n=>{console.log("props changed",n.layerToHighlight),n.layerToHighlight==2?S("Primarily Residential"):n.layerToHighlight==3?S("Nonresidential"):U()},{deep:!1});const S=n=>{console.log("toggle",t),t&&(t.setPaintProperty("fgb-layer","fill-opacity",0),setTimeout(()=>{t.setFilter("fgb-layer",["==",["get","Type_of_Zoning_District"],n]),t.setPaintProperty("fgb-layer","fill-opacity",.9)},300))},U=()=>{t.setPaintProperty("fgb-layer","fill-opacity",0),setTimeout(()=>{t.setFilter("fgb-layer",null),t.setPaintProperty("fgb-layer","fill-opacity",.9)},100)};let t;const V=()=>{t=new C.Map({accessToken:w.mapboxToken,container:"zoning-map",style:"mapbox://styles/mapbox/light-v11",center:w.initialCenter,zoom:w.initialZoom});const n=document.getElementById("zoning-map-loading"),o=document.getElementById("zoning-map-progress"),e=document.getElementById("zoning-map-legend");let a=0,u=null;const $=["#e41a1c","#377eb8","#4daf4a","#984ea3","#ff7f00","#ffff33","#a65628","#f781bf","#999999","#66c2a5","#fc8d62","#8da0cb","#e78ac3","#a6d854","#ffd92f","#e5c494","#b3b3b3","#7fc97f","#beaed4","#fdc086"],v=new Map;let D=0;function q(i){return v.has(i)||(v.set(i,$[D%$.length]),D++,I()),v.get(i)}function I(){const i=document.createElement("div");for(Array.from(v.entries()).sort((k,p)=>k[0].localeCompare(p[0])).forEach(([k,p])=>{const m=document.createElement("div");m.className="legend-item",m.innerHTML=`<div class="color-block" style="background-color: ${p}"></div>${k}`,i.appendChild(m)});e.childNodes.length>2;)e.removeChild(e.lastChild);e.appendChild(i)}function R(i){a=i,o.textContent=`Loaded ${i} features`}t.on("load",async()=>{try{n.style.display="block",o.style.display="block",console.log("Starting to load FlatGeoBuf data..."),t.addSource("fgb-data",{type:"geojson",data:{type:"FeatureCollection",features:[]}}),t.addLayer({id:"fgb-layer",type:"fill",source:"fgb-data",paint:{"fill-color":"#ccc","fill-opacity":.7,"fill-outline-color":"#000"}}),u=t.getSource("fgb-data");let i=[];const p=await fetch("https://verso-uvm.github.io/Vermont-Livability-Map/data/vt-zoning-spatial-index.fgb");if(!p.ok)throw new Error(`HTTP error! status: ${p.status}`);const m=new Set;for await(const c of te(p.body)){const E=c.properties.Type_of_Zoning_District||"Unknown";q(E);const j=c.properties.Jurisdiction||"Unknown";if(m.add(j),i.push(c),a++,a%100===0&&(R(a),u.setData({type:"FeatureCollection",features:i}),v.size>0)){const B=["match",["get","Type_of_Zoning_District"]];for(const[G,O]of v)B.push(G),B.push(O);B.push("#ccc"),t.setPaintProperty("fgb-layer","fill-color",B)}}P.value=Array.from(m).sort(),T.value=P.value,u.setData({type:"FeatureCollection",features:i}),f.value=i,console.log(i);const L=new C.LngLatBounds;i.forEach(c=>{if(c.geometry){const E=c.geometry.coordinates;c.geometry.type==="Polygon"?E[0].forEach(j=>L.extend(j)):c.geometry.type==="Point"&&L.extend(E)}}),t.fitBounds(L,{padding:50}),console.log("Map visualization complete"),console.log("Zoning types and colors:",Array.from(v.entries()))}catch(i){console.error("Error loading FlatGeoBuf data:",i),n.textContent="Error loading data"}finally{n.style.display="none",o.style.display="none"}}),t.on("click","fgb-layer",i=>{if(!i.features.length)return;const k=i.features[0],p=i.lngLat,m=Object.entries(k.properties).map(([L,c])=>`<strong>${L}:</strong> ${c}`).join("<br>");new C.Popup().setLngLat(p).setHTML(m).addTo(t)}),t.on("mouseenter","fgb-layer",()=>{t.getCanvas().style.cursor="pointer"}),t.on("mouseleave","fgb-layer",()=>{t.getCanvas().style.cursor=""}),t.addControl(new C.NavigationControl)};return X(()=>{V()}),Y(()=>{t.value&&t.value.remove()}),(n,o)=>(r(),s("div",ne,[o[4]||(o[4]=l("div",{class:"disclaimer"},[l("span",{class:"exclamation-icon"},"!"),Q(" This map is in Beta, and may contain inaccuracies. ")],-1)),l("div",le,[o[1]||(o[1]=l("label",{for:"jurisdiction-search"},"Search Jurisdiction:",-1)),K(l("input",{id:"jurisdiction-search",type:"text","onUpdate:modelValue":o[0]||(o[0]=e=>d.value=e),onInput:H,placeholder:"Type to search..."},null,544),[[ee,d.value]]),T.value.length?(r(),s("ul",ie,[(r(!0),s(b,null,h(T.value,e=>(r(),s("li",{key:e,onClick:a=>Z(e)},x(e),9,ae))),128))])):J("",!0),l("button",{onClick:A,class:"search-button"},"Search")]),o[5]||(o[5]=l("div",{id:"zoning-map"},null,-1)),o[6]||(o[6]=l("div",{id:"zoning-map-loading",class:"loading"},"Loading data...",-1)),o[7]||(o[7]=l("div",{id:"zoning-map-progress"},null,-1)),o[8]||(o[8]=l("div",{id:"zoning-map-legend",class:"legend"},[l("h4",null,"Primary zoning classification")],-1)),y.value.length?(r(),s("div",se,[o[2]||(o[2]=l("h4",null,"Jurisdiction Data",-1)),l("table",null,[l("thead",null,[l("tr",null,[(r(!0),s(b,null,h(y.value[0].properties,(e,a)=>(r(),s("th",{key:a},x(a),1))),128))])]),l("tbody",null,[(r(!0),s(b,null,h(y.value,e=>(r(),s("tr",{key:e.id},[(r(!0),s(b,null,h(e.properties,(a,u)=>(r(),s("td",{key:u},x(a),1))),128))]))),128))])])])):J("",!0),y.value.length?(r(),s("div",re,[o[3]||(o[3]=l("h4",null,"Jurisdiction Summary",-1)),l("p",null,"Number of unique objects: "+x(N.value),1),l("table",null,[l("thead",null,[l("tr",null,[(r(!0),s(b,null,h(z.value,e=>(r(),s("th",{key:e},x(e),1))),128))])]),l("tbody",null,[(r(!0),s(b,null,h(F.value,(e,a)=>(r(),s("tr",{key:a},[(r(!0),s(b,null,h(z.value,u=>(r(),s("td",{key:u},x(e[u]),1))),128))]))),128))])])])):J("",!0)]))}},de={class:"about"},ce={class:"about-container"},pe={__name:"RegionalView",setup(M){return(w,f)=>(r(),s("div",de,[l("div",ce,[f[0]||(f[0]=l("h1",{class:"title",style:{"margin-top":"50px"}},"Select a region",-1)),oe(ue,{mapboxToken:"pk.eyJ1IjoiYmRjb29sZXkiLCJhIjoiY20zM2Nzd212MWl3cTJrcTM5NWNrcjk0byJ9.40rHMMd1TXsvF8zeqxLaBw"})])]))}};export{pe as default};
